'use strict';(function(){const t={cache:!0};t.doc={id:"id",field:["title","content"],store:["title","href","section"]};const e=FlexSearch.create("balance",t);window.bookSearchIndex=e,e.add({id:0,href:"/study-java/docs/basic/grammar/keyword/",title:"关键字",section:"1.1 语法",content:"Java 关键字 #  "}),e.add({id:1,href:"/study-java/docs/basic/grammar/datastruct/",title:"数据结构",section:"1.1 语法",content:"Java 语言数据结构 #  "}),e.add({id:2,href:"/study-java/docs/basic/grammar/",title:"1.1 语法",section:"第一部分 基础入门",content:"Java 基本语法 #  访问控制 #   private: 同一个类 无 (default): 本包下的类 protected: 本包下类，或者不同包下的子类 public: 所有类  ______________________________________________________________ | │ Class │ Package │ Subclass │ Subclass │ World | | │ │ │(same pkg)│(diff pkg)│ | |───────────┼───────┼─────────┼──────────┼──────────┼────────| |public │ + │ + │ + │ + │ + | |───────────┼───────┼─────────┼──────────┼──────────┼────────| |protected │ + │ + │ + │ + │ | |───────────┼───────┼─────────┼──────────┼──────────┼────────| |no modifier│ + │ + │ + │ │ | |───────────┼───────┼─────────┼──────────┼──────────┼────────| |private │ + │ │ │ │ | |___________|_______|_________|__________|__________|________|  + : accessible blank : not accessible    Modifier Class Package Subclass World     public Y Y Y Y   protected Y Y Y N   no modifier Y Y N N   private Y N N N    参考：\n Controlling Access to Members of a Class  "}),e.add({id:3,href:"/study-java/docs/basic/std/",title:"1.2 标准库",section:"第一部分 基础入门",content:"Java 标准库 #  "}),e.add({id:4,href:"/study-java/docs/advanced/pattern/",title:"2.1 设计模式",section:"第二部分 进阶实战",content:"Java 设计模式 #  "}),e.add({id:5,href:"/study-java/docs/code/type/",title:"3.1 数据类型",section:"第三部分 源码实现",content:"Java 数据类型 #  "}),e.add({id:6,href:"/study-java/docs/appendix/tutorial/",title:"4.1 教程",section:"第四部分 附录",content:"Java 教程 #  基础 #  Heart First Java Web #  skyline75489/Heart-First-JavaWeb 一个走心的 Java Web 入门开发教程\nhttps://skyline75489.github.io/Heart-First-JavaWeb/\n 进阶 #  doocs/advanced-java #  互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识，后端同学必看，前端同学也可学习 https://doocs.github.io/advanced-java\nSnailclimb/JavaGuide #  【Java 学习 + 面试指南】 一份涵盖大部分 Java 程序员所需要掌握的核心知识。\nEffective Java #   第 3 版中文版： sjsdfg/effective-java-3rd-chinese   Java 编程思想 #   第 5 版中文版： LingCoder/OnJava8   redspider1/concurrent #  Java 多线程系列文章 在线阅读\n源码阅读 #  seaswalker/spring-analysis #  Spring 源码阅读\nseaswalker/JDK #  JDK 源码阅读笔记\n 综合 #  博客 #   farmerjohngit/myblog    sorenduan/awesome-java-books #  Java 技术书籍大全\n"}),e.add({id:7,href:"/study-java/docs/advanced/algs/",title:"2.2 算法实现",section:"第二部分 进阶实战",content:"Java 算法实现 #  "}),e.add({id:8,href:"/study-java/docs/code/keyword/",title:"3.2 关键字",section:"第三部分 源码实现",content:"Java 关键字 #  "}),e.add({id:9,href:"/study-java/docs/appendix/interview/",title:"4.2 面试题",section:"第四部分 附录",content:"Java 面试题 #  基础题 #  参考：\n 拿下阿里、头条、滴滴的 offer 后谈谈面试经验（上）  进阶题 #  "}),e.add({id:10,href:"/study-java/docs/basic/spec/",title:"1.3 编程规范",section:"第一部分 基础入门",content:"Java 编程规范 #   Google Java Style Guide  "}),e.add({id:11,href:"/study-java/docs/advanced/pkg/",title:"2.3 常用库",section:"第二部分 进阶实战",content:"Java 常用库 #  "}),e.add({id:12,href:"/study-java/docs/code/runtime/",title:"3.3 运行时",section:"第三部分 源码实现",content:"Java 运行时 #  "}),e.add({id:13,href:"/study-java/docs/appendix/attention/",title:"4.3 关注项目",section:"第四部分 附录",content:"关注项目 #  "}),e.add({id:14,href:"/study-java/docs/basic/other/",title:"1.4 其他",section:"第一部分 基础入门",content:"其他 #  "}),e.add({id:15,href:"/study-java/docs/advanced/snippet/",title:"2.4 代码片段",section:"第二部分 进阶实战",content:"Java 代码片段 #  "}),e.add({id:16,href:"/study-java/docs/advanced/test/",title:"2.5 测试",section:"第二部分 进阶实战",content:"Java 测试 #  "}),e.add({id:17,href:"/study-java/docs/code/runtime/gc/",title:"GC",section:"3.3 运行时",content:"Java GC #  Garbage Collection\n标记 #   对象回收  引用计数   方法区回收  GC 算法 #  标记 - 清除 (Mark-Sweep) #  复制 (Copying) #  标记 - 整理 (Mark-Compact) #  分代收集 #   垃圾收集器 #   串行收集器  Serial GC Serial old   并行收集器  Parallel GC ParNew GC Parallel Old GC   并发收集器  CMS (Concurrent Mark Sweep) G1    JDK 默认组合是并行收集器 (ParallelScavenge + Parallel Old)\n 参考：\n GC 垃圾回收机制  "}),e.add({id:18,href:"/study-java/docs/basic/other/version/",title:"版本",section:"1.4 其他",content:"Java 版本 #     版本 发布日期 最终免费公开更新时间 最后延伸支持日期     Java SE 19 2022 年 9 月 OpenJDK 于 2023 年 3 月停止更新 不适用   Java SE 18 2022 年 3 月 OpenJDK 于 2022 年 9 月停止更新 Eclipse Adoptium 于 2022 年 9 月或之后停止更新 不适用   Java SE 17 (LTS) 2021 年 9 月 OpenJDK 目前由 SAP 维护 Azul 于 2029 年 9 月停止更新 IBM Semeru 于 2027 年 10 月停止更新 微软于 2027 年 9 月或之后停止更新 Eclipse Adoptium 于 2027 年 9 月或之后停止更新 Oracle 于 2029 年 9 月或之后停止更新 Azul 于 2029 年 9 月停止更新 Red Hat 于 2027 年 10 月停止更新   Java SE 16 2021 年 3 月 OpenJDK 于 2021 年 9 月停止更新 不适用   Java SE 15 2020 年 9 月 OpenJDK 于 2021 年 3 月停止更新 不适用   Java SE 14 2020 年 3 月 OpenJDK 于 2020 年 9 月停止更新 不适用   Java SE 13 2019 年 9 月 OpenJDK 于 2020 年 3 月停止更新 不适用   Java SE 12 2019 年 3 月 OpenJDK 于 2019 年 9 月停止更新 不适用   Java SE 11 (LTS) 2018 年 9 月 OpenJDK 目前由 Red Hat 维护 Azul 于 2026 年 9 月停止更新 IBM Semeru 于 2024 年 10 月停止更新 Eclipse Adoptium 于 2024 年 10 月或之后停止更新 Amazon Corretto 于 2027 年 9 月或之后停止更新 微软于 2024 年 10 月或之后停止更新 Oracle 于 2026 年 9 月停止更新 Azul 于 2026 年 9 月停止更新 Red Hat 于 2024 年 10 月停止更新   Java SE 10 2018 年 3 月 OpenJDK 于 2018 年 9 月停止更新 不适用   Java SE 9 2017 年 9 月 OpenJDK 于 2018 年 3 月停止更新 不适用   Java SE 8 (LTS) 2014 年 3 月 OpenJDK 目前由 Red Hat 维护 Oracle 于 2022 年 3 月停止更新（商用） Oracle 于 2030 年 12 月停止更新（非商用） Azul 于 2030 年 12 月停止更新 IBM Semeru 于 2026 年 5 月停止更新 Eclipse Adoptium 于 2026 年 5 月或之后停止更新 Amazon Corretto 于 2026 年 5 月或之后停止更新 Oracle 于 2030 年 12 月停止更新 Red Hat 于 2026 年 11 月停止更新   Java SE 7 2011 年 7 月 OpenJDK 于 2022 年 9 月停止更新（2015 年 5 月前由 Oracle 维护） Red Hat 于 2020 年 8 月停止更新 Azul 于 2022 年 9 月停止更新 Oracle 于 2022 年 7 月停止更新 Red Hat 于 2020 年 6 月停止更新 Azul 于 2027 年 12 月停止更新   Java SE 6 2006 年 12 月 2013 年 4 月 Oracle 于 2018 年 12 月停止更新 Azul 于 2026 年 12 月停止更新   J2SE 5.0 2004 年 9 月 2009 年 11 月 2015 年 4 月   J2SE 1.4 2002 年 2 月 2008 年 10 月 2013 年 2 月   J2SE 1.3 2000 年 5 月 ? ?   J2SE 1.2 1998 年 12 月 ? ?   JDK 1.1 1997 年 2 月 ? ?   JDK 1.0 1996 年 1 月 ? ?   JDK Beta 1995 ? ?     版本控制 #    版本历史 #  Java SE 20 (2023-03) #   Java SE 19 (2022-09) #   Java SE 18 (2022-03) #   Java SE 17 (LTS) (2021-09) #   Java SE 16 (2021-03) #   Java SE 15 (2020-09) #   Java SE 14 (2020-03) #   Java SE 13 (2019-09) #   Java SE 12 (2013-03) #   Java SE 11 (LTS) (2018-09) #   增强 api  字符串增强 集合增强     Java SE 10 (2018-03) #   var 关键字  var 会根据后面的值来推断变量的类型，所以必须要初始化。     Java SE 9 (2017-09) #   Jshell 模块化（Module）  java9 以前 ：package =\u0026gt; class/interface java9 以后 ：module =\u0026gt; package =\u0026gt; class/interface     Java SE 8 (LTS) (2014-03) #   Java SE 7 (2011-07) #   Java SE 6 (2006-12) #    J2SE 5.0 (2004-09) #    J2SE 1.4 (2002-02) #   J2SE 1.3 (2000-05) #   J2SE 1.2 (1998-12) #    JDK 1.1 (1997-02) #   JDK 1.0 (1996-01) #   JDK Beta (1995) #  "}),e.add({id:19,href:"/study-java/docs/advanced/prof/",title:"2.6 性能",section:"第二部分 进阶实战",content:"Java 性能 #  "}),e.add({id:20,href:"/study-java/docs/code/jvm/",title:"3.6 JVM",section:"第三部分 源码实现",content:"JVM #  教程 #  doocs/jvm #  JVM 底层原理最全知识总结\n"}),e.add({id:21,href:"/study-java/docs/advanced/frame/",title:"2.7 框架",section:"第二部分 进阶实战",content:"Java 框架 #  "})})()